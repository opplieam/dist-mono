// Code generated by ogen, DO NOT EDIT.

package api

import (
	"fmt"
)

func (s *ErrorStatusCode) Error() string {
	return fmt.Sprintf("code %d: %+v", s.StatusCode, s.Response)
}

type CreateUserBadRequest Error

func (*CreateUserBadRequest) createUserRes() {}

type CreateUserInternalServerError Error

func (*CreateUserInternalServerError) createUserRes() {}

// Ref: #/components/schemas/Error
type Error struct {
	// The error message.
	Message string `json:"message"`
}

// GetMessage returns the value of Message.
func (s *Error) GetMessage() string {
	return s.Message
}

// SetMessage sets the value of Message.
func (s *Error) SetMessage(val string) {
	s.Message = val
}

// ErrorStatusCode wraps Error with StatusCode.
type ErrorStatusCode struct {
	StatusCode int
	Response   Error
}

// GetStatusCode returns the value of StatusCode.
func (s *ErrorStatusCode) GetStatusCode() int {
	return s.StatusCode
}

// GetResponse returns the value of Response.
func (s *ErrorStatusCode) GetResponse() Error {
	return s.Response
}

// SetStatusCode sets the value of StatusCode.
func (s *ErrorStatusCode) SetStatusCode(val int) {
	s.StatusCode = val
}

// SetResponse sets the value of Response.
func (s *ErrorStatusCode) SetResponse(val Error) {
	s.Response = val
}

type GetAllUsersBadRequest Error

func (*GetAllUsersBadRequest) getAllUsersRes() {}

type GetAllUsersInternalServerError Error

func (*GetAllUsersInternalServerError) getAllUsersRes() {}

type GetAllUsersOKApplicationJSON []User

func (*GetAllUsersOKApplicationJSON) getAllUsersRes() {}

type GetUserByIdBadRequest Error

func (*GetUserByIdBadRequest) getUserByIdRes() {}

type GetUserByIdInternalServerError Error

func (*GetUserByIdInternalServerError) getUserByIdRes() {}

// Ref: #/components/schemas/User
type User struct {
	// The unique identifier for the user.
	ID int `json:"id"`
	// The name of the user.
	Name string `json:"name"`
	// The email address of the user.
	Email string `json:"email"`
}

// GetID returns the value of ID.
func (s *User) GetID() int {
	return s.ID
}

// GetName returns the value of Name.
func (s *User) GetName() string {
	return s.Name
}

// GetEmail returns the value of Email.
func (s *User) GetEmail() string {
	return s.Email
}

// SetID sets the value of ID.
func (s *User) SetID(val int) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *User) SetName(val string) {
	s.Name = val
}

// SetEmail sets the value of Email.
func (s *User) SetEmail(val string) {
	s.Email = val
}

func (*User) createUserRes() {}

// Ref: #/components/schemas/UserCategory
type UserCategory struct {
	// The unique identifier for the user.
	ID int `json:"id"`
	// The name of the user.
	Name string `json:"name"`
	// The name of the category.
	Category string `json:"category"`
}

// GetID returns the value of ID.
func (s *UserCategory) GetID() int {
	return s.ID
}

// GetName returns the value of Name.
func (s *UserCategory) GetName() string {
	return s.Name
}

// GetCategory returns the value of Category.
func (s *UserCategory) GetCategory() string {
	return s.Category
}

// SetID sets the value of ID.
func (s *UserCategory) SetID(val int) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *UserCategory) SetName(val string) {
	s.Name = val
}

// SetCategory sets the value of Category.
func (s *UserCategory) SetCategory(val string) {
	s.Category = val
}

func (*UserCategory) getUserByIdRes() {}
